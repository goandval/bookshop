basePath: /
definitions:
  domain.Book:
    properties:
      author:
        type: string
      category:
        $ref: '#/definitions/domain.Category'
      category_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      inventory:
        type: integer
      price:
        type: number
      title:
        type: string
      updated_at:
        type: string
      year:
        type: integer
    type: object
  domain.Cart:
    properties:
      created_at:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/domain.CartItem'
        type: array
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.CartItem:
    properties:
      book:
        $ref: '#/definitions/domain.Book'
      book_id:
        type: integer
      cart_id:
        type: integer
      id:
        type: integer
      quantity:
        type: integer
      reserved_at:
        type: string
    type: object
  domain.Category:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  domain.Order:
    properties:
      created_at:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/domain.OrderItem'
        type: array
      user_id:
        type: string
    type: object
  domain.OrderItem:
    properties:
      book:
        $ref: '#/definitions/domain.Book'
      book_id:
        type: integer
      id:
        type: integer
      order_id:
        type: integer
      price:
        type: number
      quantity:
        type: integer
    type: object
info:
  contact: {}
  description: API for Bookshop service
  title: Bookshop API
  version: "1.0"
paths:
  /books:
    get:
      description: Returns a list of books, optionally filtered by category
      parameters:
      - description: Category ID
        in: query
        name: category_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Book'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get list of books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Creates a new book (admin only)
      parameters:
      - description: Book to create
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    delete:
      description: Deletes a book by ID (admin only)
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a book
      tags:
      - books
    get:
      description: Returns a book by its ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get book by ID
      tags:
      - books
    put:
      consumes:
      - application/json
      description: Updates an existing book (admin only)
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book to update
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/domain.Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a book
      tags:
      - books
  /cart:
    delete:
      description: Clears the authenticated user's cart
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Clear cart
      tags:
      - cart
    get:
      description: Returns the cart for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cart'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get user's cart
      tags:
      - cart
    post:
      consumes:
      - application/json
      description: Adds a book to the authenticated user's cart
      parameters:
      - description: Book ID to add
        in: body
        name: item
        required: true
        schema:
          additionalProperties:
            type: integer
          type: object
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Add book to cart
      tags:
      - cart
  /cart/{book_id}:
    delete:
      description: Removes a book from the authenticated user's cart
      parameters:
      - description: Book ID
        in: path
        name: book_id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Remove book from cart
      tags:
      - cart
  /categories:
    get:
      description: Returns a list of categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Category'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get list of categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Creates a new category (admin only)
      parameters:
      - description: Category to create
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/domain.Category'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a new category
      tags:
      - categories
  /categories/{id}:
    delete:
      description: Deletes a category by ID (admin only)
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a category
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Updates an existing category (admin only)
      parameters:
      - description: Category ID
        in: path
        name: id
        required: true
        type: integer
      - description: Category to update
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/domain.Category'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Category'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a category
      tags:
      - categories
  /orders:
    get:
      description: Returns a list of orders for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List user's orders
      tags:
      - orders
    post:
      description: Places an order for the authenticated user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Place an order
      tags:
      - orders
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
